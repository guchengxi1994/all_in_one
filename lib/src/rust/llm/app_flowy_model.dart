// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.31.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Attributes {
  final bool bold;
  final bool italic;

  const Attributes({
    required this.bold,
    required this.italic,
  });

  @override
  int get hashCode => bold.hashCode ^ italic.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Attributes &&
          runtimeType == other.runtimeType &&
          bold == other.bold &&
          italic == other.italic;
}

class Children {
  final String typeField;
  final Data data;

  const Children({
    required this.typeField,
    required this.data,
  });

  @override
  int get hashCode => typeField.hashCode ^ data.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Children &&
          runtimeType == other.runtimeType &&
          typeField == other.typeField &&
          data == other.data;
}

class Data {
  final int? level;
  final List<Delum> delta;
  final String? align;

  const Data({
    this.level,
    required this.delta,
    this.align,
  });

  @override
  int get hashCode => level.hashCode ^ delta.hashCode ^ align.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Data &&
          runtimeType == other.runtimeType &&
          level == other.level &&
          delta == other.delta &&
          align == other.align;
}

class Delum {
  final String insert;
  final Attributes? attributes;

  const Delum({
    required this.insert,
    this.attributes,
  });

  @override
  int get hashCode => insert.hashCode ^ attributes.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Delum &&
          runtimeType == other.runtimeType &&
          insert == other.insert &&
          attributes == other.attributes;
}

class Document {
  final String typeField;
  final List<Children> children;

  const Document({
    required this.typeField,
    required this.children,
  });

  @override
  int get hashCode => typeField.hashCode ^ children.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Document &&
          runtimeType == other.runtimeType &&
          typeField == other.typeField &&
          children == other.children;
}

class Root {
  final Document document;

  const Root({
    required this.document,
  });

  @override
  int get hashCode => document.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Root &&
          runtimeType == other.runtimeType &&
          document == other.document;
}
