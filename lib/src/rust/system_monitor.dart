// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.31.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class CpuInfo {
  final double user;
  final double system;
  final double intr;

  const CpuInfo({
    required this.user,
    required this.system,
    required this.intr,
  });

  @override
  int get hashCode => user.hashCode ^ system.hashCode ^ intr.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CpuInfo &&
          runtimeType == other.runtimeType &&
          user == other.user &&
          system == other.system &&
          intr == other.intr;
}

class MemoryInfo {
  final int used;
  final int total;

  const MemoryInfo({
    required this.used,
    required this.total,
  });

  @override
  int get hashCode => used.hashCode ^ total.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MemoryInfo &&
          runtimeType == other.runtimeType &&
          used == other.used &&
          total == other.total;
}

class MonitorInfo {
  final List<MountedInfo>? disks;
  final MemoryInfo? memory;
  final CpuInfo? cpu;

  const MonitorInfo({
    this.disks,
    this.memory,
    this.cpu,
  });

  @override
  int get hashCode => disks.hashCode ^ memory.hashCode ^ cpu.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MonitorInfo &&
          runtimeType == other.runtimeType &&
          disks == other.disks &&
          memory == other.memory &&
          cpu == other.cpu;
}

class MountedInfo {
  final String disk;
  final String name;
  final String fs;
  final int available;
  final int total;

  const MountedInfo({
    required this.disk,
    required this.name,
    required this.fs,
    required this.available,
    required this.total,
  });

  @override
  int get hashCode =>
      disk.hashCode ^
      name.hashCode ^
      fs.hashCode ^
      available.hashCode ^
      total.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MountedInfo &&
          runtimeType == other.runtimeType &&
          disk == other.disk &&
          name == other.name &&
          fs == other.fs &&
          available == other.available &&
          total == other.total;
}
